from ..utilities.google_drive import GoogleDriveUtilities as GoogleDriveUtilities, get_template as get_template
from _typeshed import Incomplete
from langchain.base_language import BaseLanguageModel as BaseLanguageModel
from langchain.document_loaders.base import BaseLoader
from langchain.schema import Document
from typing import Any, Dict, Iterator, List, Optional, Protocol, Sequence

class PromptTemplate(Protocol):
    input_variables: List[str]
    template: str
    def format(self, **kwargs: Any) -> str: ...

logger: Incomplete

class GoogleDriveLoader(BaseLoader, GoogleDriveUtilities):
    document_ids: Optional[List[str]]
    file_ids: Optional[List[str]]
    file_types: Optional[Sequence[str]]
    load_trashed_files: Optional[bool]
    def validate_file_types(cls, values: Dict[str, Any]) -> Dict[str, Any]: ...
    def validate_load_trashed_files(cls, values: Dict[str, Any]) -> Dict[str, Any]: ...
    def validate_folder_id_or_document_ids_or_file_ids(cls, values: Dict[str, Any]) -> Dict[str, Any]: ...
    def validate_older_api_and_new_environment_variable(cls, values: Dict[str, Any]) -> Dict[str, Any]: ...
    def lazy_get_relevant_documents(self, query: Optional[str] = ..., **kwargs: Any) -> Iterator[Document]: ...
    def lazy_load(self) -> Iterator[Document]: ...
    def load(self) -> List[Document]: ...
    def lazy_update_description_with_summary(self, llm: BaseLanguageModel, force: bool = ..., prompt: Optional[PromptTemplate] = ..., query: str = ..., **kwargs: Any) -> Iterator[Document]: ...
    def update_description_with_summary(self, llm: BaseLanguageModel, force: bool = ..., query: str = ..., **kwargs: Any) -> List[Document]: ...
    def __init__(self, **kwargs) -> None: ...
